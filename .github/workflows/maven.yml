# This workflow builds a Spring Boot project with Maven
# It includes dependency caching and runs tests as part of the CI pipeline

name: Spring Boot CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the repository code
    - name: Checkout code
      uses: actions/checkout@v4

    # Step 2: Set up JDK 17
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin' # Temurin JDK distribution
        cache: maven # Enable Maven dependency caching

    # Step 3: Build and run tests with Maven
    - name: Build and test with Maven
      run: mvn -B clean package

    # Step 4 (Optional): Upload build artifacts (e.g., JAR files) for further use
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: spring-boot-artifact
        path: target/*.jar

    # Step 5 (Optional): Submit the dependency graph to GitHub for Dependabot alerts
    - name: Submit dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
